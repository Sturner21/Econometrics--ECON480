---
title: "Outline 2 - Doubles for Dollars"
format: pdf
editor: visual
execute: 
  warning: false
---

# Load Libraries

```{r}
library(Lahman)
library(tidyverse)
library(broom)
library(modelsummary)
library(fixest)
library(quantmod)
library(scales)
```

# Load Datasets & Filter

```{r}
Batting <- Lahman::Batting
Appearances <- Lahman::Appearances

#DF of position players
PositionAppearances <- Appearances %>% 
  #Gross filter to find position players
  #Arbitrarily selected 5 because that filtered out a lot of PO's who came in a couple times
  filter(G_c >= 5 | G_1b >= 5 | G_2b >= 5 | G_3b >= 5 | G_ss >= 5 | G_lf >= 5 | G_cf >= 5 | G_rf >= 5 | G_of >= 5 | G_dh >= 5) %>%
  arrange(desc(G_p))

#Filter batting data by position players
PositionBatting <- Batting %>% 
  filter(playerID %in% PositionAppearances$playerID) %>% 
  #Only grab players who played in or after 1985
  #Omit 2020 because it creates 30 outliers with only 60 games played
  filter(yearID >= 1985 & yearID <= 2016) %>% 
  #Isolate singles as X1B to keep naming convention
  mutate(X1B = H - X2B - X3B - HR, .after = H) %>% 
  #Introduce "catch-all" term for "free base"
  mutate(OB = BB + HBP + IBB, .after = HBP)
```

```{r}
PositionBatting$yearID <- ISOdate(PositionBatting$yearID, 12, 1)
PositionBatting$yearID <- as.Date(PositionBatting$yearID)
PositionBatting %>% 
  glimpse()
```

```{r}
Teams <- Lahman::Teams

Teams1985 <- Teams %>% 
  filter(yearID >= 1985 & yearID <= 2016) %>% 
  mutate(X1B = H - X2B - X3B - HR, .after = H) %>% 
  mutate(OB = BB + HBP, .after = HBP)

#Put this after because ">=" no work with factor variables
Teams1985$yearID <- as.factor(Teams1985$yearID)
```

# Create Models

## Fixed Effects for Linear Weights

| Variable | Min                    | Q1                                     | Median                    | Q3                                     | Max                    | Mean                                     | SD                                     |
|----------|------------------------|----------------------------------------|---------------------------|----------------------------------------|------------------------|------------------------------------------|----------------------------------------|
| X1B      | `r min(Teams1985$X1B)` | `r quantile(Teams1985$X1B, probs=.25)` | `r median(Teams1985$X1B)` | `r quantile(Teams1985$X1B, probs=.75)` | `r max(Teams1985$X1B)` | `r round(mean(Teams1985$X1B), digits=2)` | `r round(sd(Teams1985$X1B), digits=2)` |
| X2B      | `r min(Teams1985$X2B)` | `r quantile(Teams1985$X2B, probs=.25)` | `r median(Teams1985$X2B)` | `r quantile(Teams1985$X2B, probs=.75)` | `r max(Teams1985$X2B)` | `r round(mean(Teams1985$X2B), digits=2)` | `r round(sd(Teams1985$X2B), digits=2)` |
| X3B      | `r min(Teams1985$X3B)` | `r quantile(Teams1985$X3B, probs=.25)` | `r median(Teams1985$X3B)` | `r quantile(Teams1985$X3B, probs=.75)` | `r max(Teams1985$X3B)` | `r round(mean(Teams1985$X3B), digits=2)` | `r round(sd(Teams1985$X3B), digits=2)` |
| HR       | `r min(Teams1985$HR)`  | `r quantile(Teams1985$HR, probs=.25)`  | `r median(Teams1985$HR)`  | `r quantile(Teams1985$HR, probs=.75)`  | `r max(Teams1985$HR)`  | `r round(mean(Teams1985$HR), digits=2)`  | `r round(sd(Teams1985$HR), digits=2)`  |
| OB       | `r min(Teams1985$OB)`  | `r quantile(Teams1985$OB, probs=.25)`  | `r median(Teams1985$OB)`  | `r quantile(Teams1985$OB, probs=.75)`  | `r max(Teams1985$OB)`  | `r round(mean(Teams1985$OB), digits=2)`  | `r round(sd(Teams1985$OB), digits=2)`  |
| SB       | `r min(Teams1985$SB)`  | `r quantile(Teams1985$SB, probs=.25)`  | `r median(Teams1985$SB)`  | `r quantile(Teams1985$SB, probs=.75)`  | `r max(Teams1985$SB)`  | `r round(mean(Teams1985$SB), digits=2)`  | `r round(sd(Teams1985$SB), digits=2)`  |
| SF       | `r min(Teams1985$SF)`  | `r quantile(Teams1985$SF, probs=.25)`  | `r median(Teams1985$SF)`  | `r quantile(Teams1985$SF, probs=.75)`  | `r max(Teams1985$SF)`  | `r round(mean(Teams1985$SF), digits=2)`  | `r round(sd(Teams1985$SF), digits=2)`  |

```{r}
TeamLW <- lm(data = Teams1985, R ~ X1B + X2B + X3B + HR + OB + SB + SF + yearID + teamID)
summary(TeamLW)
```

```{r}
feols(R ~ X1B + X2B + X3B + HR + OB + SB + SF | yearID + teamID, data = Teams1985)
```

## Formula

Current formula:

$$
xRC=.47X1B+.72X2B+1.09X3B+1.43HR+.32OB+.17SB+.75SF
$$

```{r}
exRC <- function(a, b, c, d, e, f, g){
  return(.466818*a + .717882*b + 1.093846*c + 1.428731*d + .315669*e + .166770*f + .754662*g)
}
```

## Find Player's xRC

```{r}
PositionBatting <- PositionBatting %>% 
  mutate(xRC = exRC(X1B, X2B, X3B, HR, OB, SB, SF), .after = lgID) %>% 
  select(playerID, yearID, teamID, xRC, R, X1B, X2B, X3B, HR, OB, SB, SF)
```

# Salary

```{r}
Salaries <- Lahman::Salaries
Salaries %>% 
  glimpse()
```

```{r}
getSymbols("CPIAUCSL", src='FRED')
avg.cpi <- apply.yearly(CPIAUCSL, mean)
cf <- avg.cpi/as.numeric(avg.cpi['2021'])
dat <- merge(Salaries, cf, all=FALSE)
newdat <- dat %>% 
  mutate(INFadj = salary / CPIAUCSL)
```

```{r}
Salaries$yearID <- ISOdate(Salaries$yearID, 12, 1)
Salaries$yearID <- as.Date(Salaries$yearID)

cf2 <- cf %>% 
  fortify.zoo() %>% 
  as_tibble() %>% 
  rename(yearID = Index)

Salaries <- inner_join(Salaries, cf2)

Salaries <- Salaries %>% 
  mutate(real_salary = salary/CPIAUCSL, .after = salary)

Salaries %>% 
  glimpse()
```

# Salary and Runs Created

```{r}
df1 <- PositionBatting %>% 
  select(playerID, xRC,yearID)

df2 <- Salaries %>% 
  select(playerID, real_salary,yearID)

df3 <- inner_join(df2,df1, by=c("playerID", "yearID"))
```

```{r}
lm(data = df3, real_salary ~ xRC) %>% 
  summary()
```

```{r}
ggplot(data=df3)+
  aes(x=xRC,
      y=real_salary)+
  geom_point(aes(color=yearID))+
  geom_smooth(method="lm")+
  scale_y_continuous(labels = label_comma())+
  labs(x="Expected Runs Created (xRC)",
       y="Real Salary (2021, $)",
       title="Real Salaries From 1985 to 2016")
```
