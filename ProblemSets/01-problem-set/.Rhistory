box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
EFPFScatter + geom_text_repel() + labs(title="test")
#| eval: false
#| echo: true
library(ggrepel)
cntry_list <- c("USA", "CAN", "HKG", "CHE")
countries <- freedom %>%
filter(ISO %in% cntry_list)
geom_label_repel(data = countries, # or whatever object name you created
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
countries
#| eval: false
#| echo: true
library(ggrepel)
cntry_list <- c("USA", "CAN", "HKG", "CHE")
countries <- freedom %>%
filter(ISO %in% cntry_list)
geom_label_repel(data = countries, # or whatever object name you created
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
EFPFScatter + geom_text_repel() + labs(title = "geom_text_repel()")
#| eval: false
#| echo: true
library(ggrepel)
cntry_list <- c("USA", "CAN", "HKG", "CHE")
countries <- freedom %>%
filter(ISO %in% cntry_list)
EFPFScatter + geom_label_repel(data = countries, # or whatever object name you created
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
#| eval: false
#| echo: true
library(ggrepel)
cntry_list <- c("USA", "CAN", "HKG", "CHE")
countries <- freedom %>%
filter(ISO %in% cntry_list)
ggplot(data=countries+
aes(x=ef_index,
y=fh_score,
color=continent)+
geom_point()+
labs(x="Economic Freedom Index Score",
y="Political Freedom Index Score",
title="Political Vs. Economic Freedom For Continents",
color="Continent")+
geom_label_repel(data = countries, # or whatever object name you created
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
#| eval: false
#| echo: true
library(ggrepel)
cntry_list <- c("USA", "CAN", "HKG", "CHE")
countries <- freedom %>%
filter(ISO %in% cntry_list)
ggplot(data=countries)+
aes(x=ef_index,
y=fh_score,
color=continent)+
geom_point()+
labs(x="Economic Freedom Index Score",
y="Political Freedom Index Score",
title="Political Vs. Economic Freedom For Continents",
color="Continent")+
geom_label_repel(data = countries, # or whatever object name you created
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
#| eval: false
#| echo: true
library(ggrepel)
cntry_list <- c("USA", "CAN", "HKG", "CHE")
countries <- freedom %>%
filter(ISO %in% cntry_list)
ggplot(data=countries)+
aes(x=ef_index,
y=fh_score,
color=continent)+
geom_point()+
labs(x="Economic Freedom Index Score",
y="Political Freedom Index Score",
title="Political Vs. Economic Freedom For Continents",
color="Continent")+
geom_label_repel(data = countries, # or whatever object name you created
max.overlaps = getOption("ggrepel.max.overlaps", default = 20),
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
#| eval: false
#| echo: true
library(ggrepel)
cntry_list <- c("USA", "CAN", "HKG", "CHE")
countries <- freedom %>%
filter(ISO %in% cntry_list)
ggplot(data=countries)+
aes(x=ef_index,
y=fh_score,
color=continent)+
geom_point()+
labs(x="Economic Freedom Index Score",
y="Political Freedom Index Score",
title="Political Vs. Economic Freedom For Continents",
color="Continent")+
geom_label_repel(data = countries, # or whatever object name you created
max.overlaps = getOption("ggrepel.max.overlaps", default = 30),
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
#| eval: false
#| echo: true
library(ggrepel)
cntry_list <- c("USA", "CAN", "HKG", "CHE")
countries <- freedom %>%
filter(ISO %in% cntry_list)
ggplot(data=countries)+
aes(x=ef_index,
y=fh_score,
color=continent)+
geom_point()+
labs(x="Economic Freedom Index Score",
y="Political Freedom Index Score",
title="Political Vs. Economic Freedom For Continents",
color="Continent")+
geom_label_repel(data = countries, # or whatever object name you created
max.overlaps = getOption("ggrepel.max.overlaps", default = 20),
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
# write your code here!
ggplot(data=countries)+
aes(x=ef_index,
y=fh_score,
color=continent)+
geom_point()+
labs(x="Economic Freedom Index Score",
y="Political Freedom Index Score",
title="Political Vs. Economic Freedom For Continents",
color="Continent")+
geom_label_repel(data = countries, # or whatever object name you created
max.overlaps = getOption("ggrepel.max.overlaps", default = 20), #Need to change to get access to points
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
#| eval: false
#| echo: true
library(ggrepel)
cntry_list <- c("USA", "CAN", "HKG", "CHE")
countries <- freedom %>%
filter(ISO %in% cntry_list)
geom_label_repel(data = countries, # or whatever object name you created
max.overlaps = getOption("ggrepel.max.overlaps", default = 20), #Need to change to get access to points
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
# write your code here!
ggplot(data=countries)+
aes(x=ef_index,
y=fh_score,
color=continent)+
geom_point()+
labs(x="Economic Freedom Index Score",
y="Political Freedom Index Score",
title="Political Vs. Economic Freedom For Continents",
color="Continent")+
geom_label_repel(data = countries, # or whatever object name you created
max.overlaps = getOption("ggrepel.max.overlaps", default = 20), #Need to change to get access to points
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == USA)
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
# write your code here!
ggplot(data=countries)+
aes(x=ef_index,
y=fh_score,
color=continent)+
geom_point()+
labs(x="Economic Freedom Index Score",
y="Political Freedom Index Score",
title="Political Vs. Economic Freedom For Continents",
subtitle="Pictured Is USA, Canada, and Switzerland",
color="Continent")+
geom_label_repel(data = countries, # or whatever object name you created
max.overlaps = getOption("ggrepel.max.overlaps", default = 20), #Need to change to get access to points
aes(x = ef_index,
y = fh_score,
label = ISO, # show ISO as label (you could do country instead)
color = continent),
alpha = 0.5, # make it a bit transparent
box.padding = 0.75, # control how far labels are from points
show.legend = F) # don't want this to add to the legend
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
ggplot(data=usa_freedom)+
aes(x=year,
y=ef_index)+
geom_point()
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
ggplot(data=usa_freedom)+
aes(x=year,
y=ef_index)+
geom_point()+
geom_path()
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom)+
aes(x=year,
y=fh_score)+
geom_point()
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom)+
aes(x=year,
y=fh_score/10)+
geom_point()
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index))+
geompoint(aes(y=fh_score/10))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index))+
geom_point(aes(y=fh_score/10))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index))+
geom_point(aes(y=fh_score/10))+
geom_line()
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index))+
geom_point(aes(y=fh_score/10))+
geom_line(aes(y=fh_score))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index))+
geom_point(aes(y=fh_score/10))+
geom_pathe(aes(y=fh_score))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index))+
geom_point(aes(y=fh_score/10))+
geom_path(aes(y=fh_score))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index))+
geom_point(aes(y=fh_score/10))+
geom_path(aes(y=fh_score/10))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index))+
geom_path(aes(y=ef_index))+
geom_point(aes(y=fh_score/10))+
geom_path(aes(y=fh_score/10))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index), color="blue")+
geom_path(aes(y=ef_index))+
geom_point(aes(y=fh_score/10))+
geom_path(aes(y=fh_score/10))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index), color="blue")+
geom_path(aes(y=ef_index), color="blue")+
geom_point(aes(y=fh_score/10))+
geom_path(aes(y=fh_score/10))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index), color="blue")+
geom_path(aes(y=ef_index), color="blue")+
geom_point(aes(y=fh_score/10), color="red")+
geom_path(aes(y=fh_score/10), color="red")
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index), color="blue")+
geom_path(aes(y=ef_index), color="blue")+
geom_point(aes(y=fh_score/10), color="red")+
geom_path(aes(y=fh_score/10), color="red")+
scale_color_manual(values = colors)
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom %>%
pivot_longer(c("ef_index", "fh_score"),
names_to = "year",
values_to = "score")
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
usa_freedom %>%
pivot_longer(c("ef_index", "fh_score"),
names_to = "year")
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index), color="blue")+
geom_path(aes(y=ef_index), color="blue")+
geom_point(aes(y=fh_score/10), color="red")+
geom_path(aes(y=fh_score/10), color="red")+
scale_color_manual(name="Legend")
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index), color="blue")+
geom_path(aes(y=ef_index), color="blue")+
geom_point(aes(y=fh_score/10), color="red")+
geom_path(aes(y=fh_score/10), color="red")+
scale_color_manual(name="Legend", values = c('blue', 'red'))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index), color="ef")+
geom_path(aes(y=ef_index), color="ef")+
geom_point(aes(y=fh_score/10), color="fh")+
geom_path(aes(y=fh_score/10), color="fh")+
scale_color_manual(name="Legend", values = c('ef'='blue', 'ef'='red'))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index), color="ef")+
geom_path(aes(y=ef_index), color="ef")+
geom_point(aes(y=fh_score/10), color="fh")+
geom_path(aes(y=fh_score/10), color="fh")+
scale_color_manual(name="Legend", values = c('ef'='blue', 'fh'='red'))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index), color="ef")+
geom_path(aes(y=ef_index), color="ef")+
geom_point(aes(y=fh_score/10), color="fh")+
geom_path(aes(y=fh_score/10), color="fh")+
scale_color_manual(name="Legend",
breaks = c('ef', 'fh'),
values = c('ef'='blue', 'fh'='red'))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index, color="ef"))+
geom_path(aes(y=ef_index, color="ef"))+
geom_point(aes(y=fh_score/10, color="fh"))+
geom_path(aes(y=fh_score/10, color="fh"))+
scale_color_manual(name="Legend",
breaks = c('ef', 'fh'),
values = c('ef'='blue', 'fh'='red'))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index, color="Economic Index"))+
geom_path(aes(y=ef_index, color="Economic Index"))+
geom_point(aes(y=fh_score/10, color="fh"))+
geom_path(aes(y=fh_score/10, color="fh"))+
scale_color_manual(name="Scores",
breaks = c('Economic Index', 'fh'),
values = c('Economic Index'='blue', 'fh'='red'))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index, color="Economic Index"))+
geom_path(aes(y=ef_index, color="Economic Index"))+
geom_point(aes(y=fh_score/10, color="Freedom Index"))+
geom_path(aes(y=fh_score/10, color="Freedom Index"))+
scale_color_manual(name="Scores",
breaks = c('Economic Index', 'Freedom Index'),
values = c('Economic Index'='blue', 'Freedom Index'='red'))
# write your code here!
usa_freedom <- freedom %>%
filter(ISO == "USA")
ggplot(data=usa_freedom, aes(x=year))+
geom_point(aes(y=ef_index, color="Economic Index"))+
geom_path(aes(y=ef_index, color="Economic Index"))+
geom_point(aes(y=fh_score/10, color="Freedom Index"))+
geom_path(aes(y=fh_score/10, color="Freedom Index"))+
scale_color_manual(name="Scores",
breaks = c('Economic Index', 'Freedom Index'),
values = c('Economic Index'='blue', 'Freedom Index'='red'))+
labs(x="Year",
y="Index Score",
title="Economic and Political Freedom In the USA",
subtitle="Since 1970")
#| echo: true
#| eval: false # <- reset to true to run this chunk!
freedom <- left_join(econ, pol, # join pol tibble to econ tibble
by = c("country", "year")) # keys to match variables between two tibbles!
# write your code here!
freedom %>%
glimpse()
# write your code here!
freedom
# write your code here!
freedom %>%
head()
# write your code here!
freedom %>%
glimpse()
